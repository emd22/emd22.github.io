{"ast":null,"code":"var _jsxFileName = \"/home/emd22/CLionProjects/site/src/About.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst About = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative text-gray-300 px-20 py-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"\",\n      children: \"About me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u2003Early on, I started programming in Python when I was first entering Grade 5, and was immediately hooked when I found out what I could make in Pygame. Since then, i've made kernels, text editors, terminal libraries, networking libraries, games, and much more. Me and my brother Andrew(@ajmd17) have also participated in a few code jams, including making an interpreted language(and a few examples in it!) named \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://replit.com/talk/challenge/PEACH-programming-language/51581\",\n        children: \"Peach\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 55\n      }, this), \", and an \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://dos-v2--ajmd17.repl.co/\",\n        children: \"online game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 152\n      }, this), \" about fighting off \", /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"shitcoins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 231\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u2003Me and my brother are currently building a game engine using \", /*#__PURE__*/_jsxDEV(\"u\", {\n        children: \"only\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 83\n      }, this), \" modern techniques, and wrote the renderer completely from scratch for \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.vulkan.org/\",\n        children: \"Vulkan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 68\n      }, this), \". With a custom scripting language and multi-threaded rendering, our game engine gives solid performance while also being a great learning tool. I am currently rewriting parts of the language to allow for\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.howtogeek.com/devops/what-is-just-in-time-jit-compilation/\",\n        children: \" Just-In-Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), \"(JIT) compilation.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","About"],"sources":["/home/emd22/CLionProjects/site/src/About.js"],"sourcesContent":["import React from \"react\";\n\nconst About = () => {\n    return (\n        <div className={\"relative text-gray-300 px-20 py-10\"}>\n            <h1 className={\"\"}>About me</h1>\n            <p>&emsp;Early on, I started programming in Python when I was first entering Grade 5, and was immediately hooked when\n            I found out what I could make in Pygame. Since then, i've made kernels, text editors, terminal libraries, networking libraries,\n            games, and much more. Me and my brother Andrew(@ajmd17) have also participated in a few code jams, including making an interpreted\n            language(and a few examples in it!) named <a href={\"https://replit.com/talk/challenge/PEACH-programming-language/51581\"}>Peach</a>, and an <a href={\"https://dos-v2--ajmd17.repl.co/\"}>online game</a> about fighting off <i>shitcoins</i>.\n            </p>\n            <br />\n            <p>&emsp;Me and my brother are currently building a game engine using <u>only</u> modern techniques,\n                and wrote the renderer completely from scratch for <a href={\"https://www.vulkan.org/\"}>Vulkan</a>.\n                With a custom scripting language and multi-threaded rendering, our game engine gives solid performance\n                while also being a great learning tool. I am currently rewriting parts of the language to allow for\n                <a href={\"https://www.howtogeek.com/devops/what-is-just-in-time-jit-compilation/\"}> Just-In-Time</a>(JIT) compilation.\n\n\n            </p>\n\n        </div>\n    );\n}\nexport default About;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAChB,oBACI;IAAK,SAAS,EAAE,oCAAhB;IAAA,wBACI;MAAI,SAAS,EAAE,EAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,4bAG0C;QAAG,IAAI,EAAE,oEAAT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAH1C,4BAG2I;QAAG,IAAI,EAAE,iCAAT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAH3I,uCAG0N;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAH1N;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAOI;MAAA;MAAA;MAAA;IAAA,QAPJ,eAQI;MAAA,+FAAsE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAtE,0FACuD;QAAG,IAAI,EAAE,yBAAT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADvD,+NAII;QAAG,IAAI,EAAE,wEAAT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH,CArBD;;KAAMA,K;AAsBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}